document.addEventListener('DOMContentLoaded', function () {
    var cookieconsent = document.querySelector('.mod_cookieconsent');

    // Return if the cookiebar element does not exist
    if (!cookieconsent) {
        return;
    }

    var cookieName = 'FZ_COOKIECONSENT';
    var openCssClass = 'open';

    var cookieSettingsButton = document.querySelector('.cookieSettings');
    if(cookieSettingsButton) {
      cookieSettingsButton.addEventListener('click', function (e) {
          e.preventDefault();
          // Add the open CSS class
          cookieconsent.classList.add(openCssClass);
        });
    }

    var acceptButton = cookieconsent.querySelector('.submit');

    // Power up the accept button if exists
    if (acceptButton) {
        var radios = cookieconsent.querySelectorAll('input[name="privacy"]');

        // set radio button state
        for(let i = 1; i <= 3; i++) { // all possible cookies
          if (window.localStorage.getItem(cookieName + '_' + i) && window.localStorage.getItem(cookieName + '_' + i) > Math.round(Date.now() / 1000)) {
              radios[i-1].checked = true;
          }
        }

        acceptButton.addEventListener('click', function (e) {
            e.preventDefault();

            var date = new Date();
            var ttl = cookieconsent.dataset.cookiebarTtl ? parseInt(cookieconsent.dataset.cookiebarTtl, 10) : 365;

            var cookieValue; // 1 - 3

            for (var i = 0, length = radios.length; i < length; i++) {
              if (radios[i].checked) {
                cookieValue = radios[i].value;
                break;
              }
            }

            // remove old items
            for(let i = 1; i <= 3; i++) { // all possible cookies
              if (window.localStorage.getItem(cookieName + '_' + i)) {
                  window.localStorage.removeItem(cookieName + '_' + i);
              }
            }

            // Store in local storage
            date.setDate(date.getDate() + ttl);
            window.localStorage.setItem(cookieName + "_" + cookieValue, Math.round(date.getTime() / 1000));

            // Remove the active CSS class
            cookieconsent.classList.remove(openCssClass);

            // send changed event
            jQuery(document).trigger('user_privacy_changed', { level: cookieValue });
        });
    }

    for(let i = 1; i <= 3; i++) { // all possible cookies
      if (window.localStorage.getItem(cookieName + '_' + i) && window.localStorage.getItem(cookieName + '_' + i) > Math.round(Date.now() / 1000)) {
          return;
      }
    }

    // Add the open CSS class
    cookieconsent.classList.add(openCssClass);
});